[gcode_macro PRINT_START_ORIG]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    {% set BED = params.BED|default(70)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(235)|float %}
    G90
    M107
    M82
    G28
    G1 Z20 F3000
    G92 E0
    G1 X110 Y0.5 F2000
    G1 Z0.28 F400
    G1 X30 Y0.5 E18 F1000
    G1 Z0.5 F200
    M140 S{BED}
     # Wait for bed to reach temperature
    M190 S{BED}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER}
    G92 E0

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                         # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                    # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
    #G4 P300000                                      # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp

  # Create a purge line and starts the print
  G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
  G1 X115 E20 F1000                                # Purge line

# Do nozzle purge
[gcode_macro PURGE_EXTRUDER]
gcode:
    SAVE_GCODE_STATE NAME=PURGE
    #M117 Purging line
    G1 Z0.2 F6000.0
    G91
    G1 Z2 E9 F1000         ; Slowly rise printhead while purging
    G1 Z3 F1000            ; Keep rising out of the purge blob
    G90
    RESTORE_GCODE_STATE NAME=PURGE
    
# Do nozzle priming
[gcode_macro PRIME_EXTRUDER]
gcode:
    SAVE_GCODE_STATE NAME=PRIME
    #M117 Prime Line
    G0 X10.0 Z0.2 F200        ; Go to X10
    G92 E0                    ; reset extrusion distance
    G1  X60.0  E9 F1000       ;  9mm over 50mm
    G1 X100.0 E10 F1000       ; 10mm over 40mm
    G92 E0                    ; reset extrusion distance
    G1 X110.0 E-0.1 F2400     ; small retract while moving to remove pressure and excess plastic
    G1 Z2 F6000               ; Lift Z
    RESTORE_GCODE_STATE NAME=PRIME 


[gcode_macro PRINT_END_ORIG]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    SET_SKEW CLEAR=1



[gcode_macro PRINT_END]
variable_print_done: 'false'
gcode:
    ##### Get Boundaries #####
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set mid_x = (printer.toolhead.axis_maximum.x|float / 2)|float %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                ; Wait for buffer to clear

    # Anti-Stringing
    G92 E0              ; zero the extruder
    G1 E-2.0 F3600      ; retract 2mm of filament at 60mm/s
    G91                 ; relative positioning
    G1 X1 F20000        ; move 1mm to the side at 333mm/sec
    G1 Z5.00 F3000      ; move up by 5mm @ 50mm/sec to clear the print
    G0 X60 Y{max_y} F3600          ; park nozzle at rear

    TURN_OFF_HEATERS
    M107
    G90
    G0 X{mid_x} Y{max_y} F20000
    G0 Z{max_z} F6000
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END